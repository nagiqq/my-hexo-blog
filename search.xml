<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>/ 寫程式第一年心得小記</title>
      <link href="/2023/02/02/23020209/"/>
      <url>/2023/02/02/23020209/</url>
      
        <content type="html"><![CDATA[<h2 id="Abstract-文章摘要"><a href="#Abstract-文章摘要" class="headerlink" title="Abstract 文章摘要"></a>Abstract 文章摘要</h2><ol><li>寫程式是21歲前最不可能職業排名前三(其他兩名是電機跟運動)</li><li>可以提供給你滿滿的成就感，想起幾個月前連npm都run不起來的我</li><li>只要願意嘗試，永遠都有可能做得到(也不用像刺繡一樣，還得先買一堆工具才能開始，還要煩惱刺完要放哪，只需要打開筆電就可以開始嘗試)</li><li>雖然我是個人生座右銘是”screen free，experience the world”(幾年前還是，能手寫筆記就不要用電腦打字的人)，但是在程式的世界真得是無國界的，常常幫你回答問題的人，來自於一個這輩子不會去的國家、城市</li><li>雖然不確定我會寫程式多久，但目前還是在寫ing</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>/ 小工具筆記 -- vue3 頁籤</title>
      <link href="/2023/01/31/23013107/"/>
      <url>/2023/01/31/23013107/</url>
      
        <content type="html"><![CDATA[<h2 id="Abstract-文章摘要"><a href="#Abstract-文章摘要" class="headerlink" title="Abstract 文章摘要"></a>Abstract 文章摘要</h2>]]></content>
      
      
      <categories>
          
          <category> 程式語言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小工具 </tag>
            
            <tag> vue3 </tag>
            
            <tag> nuxt3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>/ 小工具筆記 -- window.scrollTo</title>
      <link href="/2023/01/31/23020208/"/>
      <url>/2023/01/31/23020208/</url>
      
        <content type="html"><![CDATA[<h2 id="Abstract-文章摘要"><a href="#Abstract-文章摘要" class="headerlink" title="Abstract 文章摘要"></a>Abstract 文章摘要</h2><ol><li>雖然簡單幾行，但是卡了很久，趕緊做個小記錄</li><li>router.afterEach等生命週期，官方文件沒有寫，是一層層回去找原碼的</li><li>scroll-bahavior:smoooth (bootstrap)</li></ol>]]></content>
      
      
      <categories>
          
          <category> 程式語言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小工具 </tag>
            
            <tag> vue3 </tag>
            
            <tag> nuxt3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3 -- Props &amp; Emit</title>
      <link href="/2023/01/22/23012206/"/>
      <url>/2023/01/22/23012206/</url>
      
        <content type="html"><![CDATA[<h2 id="Abstract-文章摘要"><a href="#Abstract-文章摘要" class="headerlink" title="Abstract 文章摘要"></a>Abstract 文章摘要</h2><blockquote><p>Props in, Emit out</p></blockquote><h2 id="Introduction-前言"><a href="#Introduction-前言" class="headerlink" title="Introduction 前言"></a>Introduction 前言</h2><p>要將程式碼寫得乾淨漂亮又好維護，將每個功能、區塊拆分成一塊塊的component是很重要的，在每個頁面重複利用component，省去複製貼上的雜工，有需要修改的時候也只需要修改一次元件就完事了。理想上，一個.vue檔案不超過200行是最好的，簡潔的程式碼也會增加易讀性(要記得養成寫註釋說明的好習慣，未來才好回憶component間的資料流向)。</p><p>拆成component的過程中，slot跟props是很重要的技能，slot，較常是用在layout的場合下，layout留下<code>&lt;slot name=&quot;header&quot;&gt;&lt;/slot&gt;</code>的洞(像鑲嵌寶石的插槽)，留給子元件用template 的方式<code>&lt;template #header&gt;&lt;/template&gt;</code> 插入自己的值，例如以下範例的<code>mylayout.vue </code> 就留給不同頁面插入自己的頁面名稱。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// mylayout.vue</span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;hello this is &lt;slot name=&quot;header&quot;/&gt; page&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">// aboutView.vue</span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;main&gt;</span><br><span class="line">&lt;my-layout&gt;</span><br><span class="line">&lt;template #header&gt;ABOUT&lt;/template&gt;</span><br><span class="line">&lt;/my-layout&gt;</span><br><span class="line">&lt;/main&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><hr><p>props則為較彈性的動態資料插入，以”拆成小塊的功能子元件”component為思考主體，向上從父元件接收資料(第2節 – [props in](#Props in))、傳遞資料回去(第3節 – [emit out](#Emit out))，或是也可以再往下傳遞資料給下一個component(第4節 – <a href="#%E5%B5%8C%E5%A5%97">嵌套</a>)。當component中有動態的資料需要傳遞時，例如：</p><ul><li>傳入store取得的陣列資料</li><li>class 名稱需要動態切換</li><li>或是需要先將資料傳入子元件，經過處理後再傳回父元件的場合</li></ul><p>就很適合善用props來讓程式碼拆成更小的component來使用。</p><h2 id="2-Props-in"><a href="#2-Props-in" class="headerlink" title="2. Props in"></a>2. Props in</h2><h2 id="3-Emit-out"><a href="#3-Emit-out" class="headerlink" title="3. Emit out"></a>3. Emit out</h2><h2 id="4-嵌套"><a href="#4-嵌套" class="headerlink" title="4. 嵌套"></a>4. 嵌套</h2>]]></content>
      
      
      <categories>
          
          <category> 程式語言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nuxt3 </tag>
            
            <tag> front-end </tag>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>/ Nuxt3 -- Eslint and Prettier</title>
      <link href="/2023/01/22/23012205/"/>
      <url>/2023/01/22/23012205/</url>
      
        <content type="html"><![CDATA[<h2 id="Abstract-文章摘要"><a href="#Abstract-文章摘要" class="headerlink" title="Abstract 文章摘要"></a>Abstract 文章摘要</h2>]]></content>
      
      
      <categories>
          
          <category> 程式語言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nuxt3 </tag>
            
            <tag> front-end </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt3 -- vuetify 3</title>
      <link href="/2023/01/22/23012104/"/>
      <url>/2023/01/22/23012104/</url>
      
        <content type="html"><![CDATA[<h2 id="Abstract-文章摘要"><a href="#Abstract-文章摘要" class="headerlink" title="Abstract 文章摘要"></a>Abstract 文章摘要</h2><p>vuetify是個for vue 的框架，在開始一個專案時，如果不想為了設計太花時間，vuetify就是個類似bootstrap的設計框架，提供組裝好的<br>元件，例如：layout、頁籤和分頁等，但使用起來如果要調整客製化的樣式，還是得具備css的基礎、以及vue slot的知識，以下的範例稍微嘗試了下使用vuetify3<br>(vuetify2 跟 vuetify 3 的官方網站不同，有些vuetify2功能不能沿用)創建一頁簡單的page</p><h2 id="附上我的範例"><a href="#附上我的範例" class="headerlink" title="附上我的範例"></a>附上我的範例</h2><p><a href="https://github.com/nagiqq/vuetify-sample">My github example</a><br><a href="https://vuetify-sample.vercel.app/test">My example website at vercel</a></p>]]></content>
      
      
      <categories>
          
          <category> 程式語言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nuxt3 </tag>
            
            <tag> front-end </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt3 -- aos 套件使用方法</title>
      <link href="/2023/01/22/23012103/"/>
      <url>/2023/01/22/23012103/</url>
      
        <content type="html"><![CDATA[<h2 id="Abstract-文章摘要"><a href="#Abstract-文章摘要" class="headerlink" title="Abstract 文章摘要"></a>Abstract 文章摘要</h2><p>在Nuxt3引入套件的部分一直遇到很多坑，像是不能引用jquery(無法辨別到$字元)、還有vue版本差異…等原因而遇到的問題。<br>像視差捲動的套件：本篇aos套件就是卡了很久，找到我可以使用的方法，將之做個紀錄。</p><h2 id="參考網站"><a href="#參考網站" class="headerlink" title="參考網站"></a>參考網站</h2><p><a href="https://www.reddit.com/r/Nuxt/comments/vn2b5l/aos_nuxt3_seems_like_an_impossible_challenge/">AOS + Nuxt3 seems like an impossible challenge? : Nuxt (reddit.com)</a></p><p><a href="https://github.com/michalsnik/aos">michalsnik&#x2F;aos: Animate on scroll library (github.com)</a></p><h2 id="當不知道為何突然不能install-套件時"><a href="#當不知道為何突然不能install-套件時" class="headerlink" title="當不知道為何突然不能install 套件時"></a>當不知道為何突然不能install 套件時</h2><ol><li>重新git 一個新的repos下來</li><li>用<code>yarn install</code>來跑</li><li>然後<code>yarn add aos@next</code>(or <code>yarn vue3-cacousel</code>)</li><li>打開還是可以用pnpm</li></ol><h2 id="使用aos步驟"><a href="#使用aos步驟" class="headerlink" title="使用aos步驟"></a>使用aos步驟</h2><ol><li><p>安裝套件(上面排解bug)</p></li><li><p>在plugins資料夾(@&#x2F;pages同一層)新增aos.ts檔案</p></li><li><p>aos.ts貼上以下程式碼</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// @plugins/aos.ts</span><br><span class="line"></span><br><span class="line">import AOS from &#x27;aos&#x27;;</span><br><span class="line">import &#x27;aos/dist/aos.css&#x27;;</span><br><span class="line">export default defineNuxtPlugin((nuxtApp) =&gt; &#123;  </span><br><span class="line">  if (typeof window !== &#x27;undefined&#x27;) &#123;    </span><br><span class="line">    nuxtApp.AOS = AOS.init();  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>使用</p><p><a href="http://michalsnik.github.io/aos/">AOS - Animate on scroll library (michalsnik.github.io)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2 class=&quot;topHeading&quot; data-aos=&#x27;fade-right&#x27;&gt;&lt;/h2&gt;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 程式語言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nuxt3 </tag>
            
            <tag> front-end </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nuxt3 -- dynamic pages</title>
      <link href="/2023/01/18/23011802/"/>
      <url>/2023/01/18/23011802/</url>
      
        <content type="html"><![CDATA[<h2 id="Abstract-文章摘要"><a href="#Abstract-文章摘要" class="headerlink" title="Abstract 文章摘要"></a>Abstract 文章摘要</h2><p>在研究nuxt3 的dynamic pages時，摸索了好一陣子，這邊簡單紀錄一下關於nuxt3 動態頁面的觀念與用法。</p><pre><code>1. 官方文件說明 &amp; 官方範例↓</code></pre><p><a href="https://v3.nuxtjs.org/guide/directory-structure/pages#example">nuxtjs.org</a></p><p><a href="https://v3.nuxtjs.org/examples/routing/pages">Pages · Nuxt This example</a></p><pre><code>2. nuxt3 的動態路由，基本觀念有以下幾個</code></pre><p>頁面命名方式為[params].vue，裡面塞動態路由的參數<br>例如：[slug].vue，接收參數方式→ <code>$&#123;route.params.slug&#125;</code><br>(slug可以替換成其他傳入的參數名稱，例如：id、slut…都可以)<br><br/></p><p>在<code>&lt;script&gt;</code> 中第一行先聲明 使用route<br><code>const route = useRoute()</code></p><pre><code>3. 範例 — — api ver</code></pre><p>將頁面命名為[slug].vue ，並在<code>&lt;script&gt;</code>裡面放入api (範例api為官方範例提供的mountain data)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// @[slug].vue</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">const route = useRoute()</span><br><span class="line">const &#123; data: mountain &#125; = </span><br><span class="line">    await useFetch(`https://api.nuxtjs.dev/mountains/$&#123;route.params.slug&#125;`)</span><br><span class="line">// TODO: 動態網址為api裡面的slug名稱</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;h1&gt;&#123;&#123; mountain.title &#125;&#125;&lt;/h1&gt;</span><br><span class="line">&lt;p&gt; &#123;&#123; mountain.description &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">網址輸入api中slug的value值，即可連到成功連到頁面，並可在頁面中使用api的data</span><br></pre></td></tr></table></figure><p><img src="https://nagiqq.github.io/2023/01/18/23011802/0201.jpg" alt="頁面呈現結果"><br>[slug].vue頁面呈現結果</p><p>範例github↓<br><a href="https://github.com/nagiqq/nuxt3_dynamicpages">GitHub - nagiqq&#x2F;nuxt3_dynamicpagesLook at the nuxt 3 documentation to learn more. Make sure to install the dependencies: Start the development server on…github.com</a></p><pre><code>4. [[slug]].vue</code></pre><p><strong><code>[[slug]].vue</code> 雙中括號表示傳入的參數為可選</strong><br>可用 ?? 來表示如果沒有傳入route的參數時的預設值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const pageID = ref(route.params.pageID ?? 1)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程式語言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nuxt3 </tag>
            
            <tag> front-end </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nuxt3 -- content |  v-for content | content 裡面的陣列</title>
      <link href="/2023/01/18/23011801/"/>
      <url>/2023/01/18/23011801/</url>
      
        <content type="html"><![CDATA[<p>在研究nuxt3 技術時，討論的文章還不是很多，遇到了不少坑，在這裡簡單分享自己的研究成果，也順便幫未來的自己做個紀錄。</p><p>這篇文章為使用nuxt3 content，資料結構為三層的心得分享。</p><h2 id="Abstract-文章摘要"><a href="#Abstract-文章摘要" class="headerlink" title="Abstract 文章摘要"></a>Abstract 文章摘要</h2><p>Content 為nuxt3裡面一個很好用的功能，只要在content資料夾中準備markdown檔案(其他文件檔案好像也可以，參考<a href="https://content.nuxtjs.org/">https://content.nuxtjs.org/</a> 文件說明)，就可以render裡面的資料。</p><p>做靜態網站時，把文字、圖片等資料集中管理，做更改的時候就可以很快速！甚至更改的人也可以不用看懂網站的語法結構，只要看得懂json檔案格式，對照文字，就可以快速地更改網站內容。</p><p>首先會介紹content的基本配置，官方文件寫的<code>&lt;ContentList&gt;</code> &amp; <code>&lt;ContentDoc&gt;</code> 的render基本的使用方法↓</p><p><a href="https://v3.nuxtjs.org/guide/directory-structure/content#content-directory">v3.nuxtjs.org</a></p><p>例如網站中想要有一頁面為blog，裡面列出所有的blog標題，點選標題可以進入文章詳細頁面時，就可以簡單地使用，也就是以下這位大神在demo nuxt3範本時，*<strong>Post*</strong> 頁面的使用方法↓</p><p><a href="https://github.com/viandwi24/nuxt3-awesome-starter/blob/main/pages/post/index.vue">nuxt3-awesome-starter · viandwi24.github.com</a></p><p>再來是介紹再進階一層，ContenDoc還有一個陣列v-for來取得陣列資料。資料結構為一個根(例如：文章)，下面有類別(文章分類)，類別下有細項(文章本身)的三層結構，主要是參考以下文章↓</p><p><a href="https://blog.openreplay.com/power-your-blog-with-nuxt-content">Power your blog with Nuxt Content (openreplay.com)</a></p><h2 id="content-基本配置"><a href="#content-基本配置" class="headerlink" title="content 基本配置"></a>content 基本配置</h2><h3 id="1-installation"><a href="#1-installation" class="headerlink" title="1. installation"></a>1. installation</h3><p>首先先按照官方文件的說明 — <a href="https://v3.nuxtjs.org/guide/directory-structure/content#installation">Installation</a>，先install npm content到專案。以下指令任選一個使用就可以了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add --dev @nuxt/content// or </span><br><span class="line">npm install --save-dev @nuxt/content// or</span><br><span class="line">pnpm add -D @nuxt/content</span><br></pre></td></tr></table></figure><p>然後很重要的，到nuxt.config.ts增加modules <code>&#39;@nuxt/content&#39;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@ nuxt.config.ts</span><br><span class="line"></span><br><span class="line">export default defineNuxtConfig(&#123;</span><br><span class="line"> modules: [</span><br><span class="line"> &#x27;@nuxt/content&#x27;</span><br><span class="line"> ],</span><br><span class="line"> content: &#123;</span><br><span class="line"> // https://content.nuxtjs.org/api/configuration</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="2-新增content資料夾"><a href="#2-新增content資料夾" class="headerlink" title="2. 新增content資料夾"></a>2. 新增content資料夾</h3><p>先新增一個名為content的資料夾，裡面放contentDoc想要render的markdown檔案，nuxt3會自動match *<strong>pages*</strong> 和 *<strong>content*</strong> 兩個資料夾裡面相同名稱的資料夾，例如：我想要一個名為blog的頁面，裡面有文章，資料夾配置如下↓</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/ mySite</span><br><span class="line"> - nuxt.config.ts</span><br><span class="line"> - app.vue</span><br><span class="line"> - /pages</span><br><span class="line">   -- index.vue</span><br><span class="line">   -- /blog</span><br><span class="line">       --- index.vue</span><br><span class="line">       --- [slut].vue   </span><br><span class="line"> - /content</span><br><span class="line">   -- /blog</span><br><span class="line">       --- post01.md</span><br><span class="line">       --- post02.md</span><br><span class="line">       --- post03.md</span><br></pre></td></tr></table></figure><ul><li>pages&#x2F;blog&#x2F;index.vue 為 *<strong>blog*</strong> 頁面的首頁，網址為 mySite&#x2F;blog</li><li>pages&#x2F;blog&#x2F;[slut].vue 則是到時候render的內頁，網址為 mySite&#x2F;blog&#x2F;post01.md(會抓取你content&#x2F;blog的md檔案名稱)</li></ul><h3 id="3-準備資料-md"><a href="#3-準備資料-md" class="headerlink" title="3. 準備資料.md"></a>3. 準備資料.md</h3><p>關於markdown的資料寫法，請參考官方說明Content的文件↓</p><p><a href="https://content.nuxtjs.org/guide/writing/markdown">Nuxt content.nuxtjs.org</a></p><p>在這邊分享我的md檔，內容為上網抓世界知名博物館的名稱、圖片(維基百科)、與說明文字↓</p><p>有三點小提醒：</p><ol><li>上面是資料名稱，需要 欄位：’欄位值’，以及下面是content的內容，不加引號以外，欄位都可以依照自己的需要做編排以及取名</li><li>官方的文件說明中，md檔還可以加入標籤以及樣式，不過我沒有用到</li><li>每一個md檔的內容欄位，也就是下面”The British Museum…..”的地方不能是空的，不然content的內頁會噴錯(可以不要渲染這裡但不能不填)</li></ol><p><img src="https://nagiqq.github.io/2023/01/18/23011801/0101.jpg" alt="img"></p><p>也可以直接到我的github上看範例↓(git commit: ‘content version 1’)<br><a href="https://github.com/nagiqq/nuxt3_content/blob/dev/content/blog/post01.md">nuxt3_content&#x2F;post01.md at dev · nagiqq.github.com</a></p><p>小補充：可以上網搜尋***json editor***，例如：<a href="https://jsoneditoronline.org/">https://jsoneditoronline.org/</a> 、<a href="http://www.objgen.com/json%E2%80%A6%E7%AD%89%E7%AD%89%E5%B9%AB%E4%BD%A0%E5%BF%AB%E9%80%9F%E7%B7%A8%E8%BC%AFjson%E6%A0%BC%E5%BC%8F%E7%9A%84%E8%B3%87%E6%96%99">http://www.objgen.com/json…等等幫你快速編輯json格式的資料</a></p><h3 id="4-ContentList"><a href="#4-ContentList" class="headerlink" title="4. ContentList"></a>4. ContentList</h3><p>前置作業都做好以後，終於來到最重要的部分啦，先來分享看程式碼與頁面呈現，再來詳細說明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@ pages/blog/index.vue</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;h1&gt;blog post--museum&lt;/h1&gt;</span><br><span class="line">  &lt;ContentList v-slot=&quot;&#123; list &#125;&quot;&gt;</span><br><span class="line">    &lt;div v-for=&quot;article in list&quot; :key=&quot;article._path&quot;&gt;</span><br><span class="line">    &lt;h2&gt;&#123;&#123; article.name &#125;&#125; &lt;/h2&gt;</span><br><span class="line">      &lt;h3&gt;&#123;&#123; article.date &#125;&#125;&lt;/h3&gt;</span><br><span class="line">      &lt;img :src=&quot;article.img&quot;&gt;</span><br><span class="line">      &lt;h3&gt;&#123;&#123; article.description &#125;&#125;&lt;/h3&gt;</span><br><span class="line">      &lt;div&gt; &lt;a :href=&quot;article._path&quot;&gt;閱讀更多→&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">      &lt;hr/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/ContentList&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><br/><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@ pages/blog/[slut].vue</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;ContentDoc v-slot=&quot;&#123; doc &#125;&quot;&gt;</span><br><span class="line">    &lt;h1&gt;&#123;&#123; doc.name &#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;img :src=&quot;doc.img&quot;&gt;</span><br><span class="line">    &lt;small&gt;&#123;&#123; doc.date &#125;&#125;&lt;/small&gt;</span><br><span class="line">    &lt;h2&gt;&#123;&#123; doc.description &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;ContentRenderer :value=&quot;doc&quot;/&gt;</span><br><span class="line">  &lt;/ContentDoc&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p><img src="https://nagiqq.github.io/2023/01/18/23011801/0102.jpg" alt="img"><br>頁面呈現結果 — blog&#x2F;index.vue</p><p><img src="https://nagiqq.github.io/2023/01/18/23011801/0103.jpg" alt="img"><br>頁面呈現結果 — blog&#x2F;post02</p><p>在pages&#x2F;blog&#x2F;index.vue 中的’list’是固定的名稱，讓nuxt3 找到在content資料夾中，與pages資料夾相同名稱的資料夾中的檔案名稱，進行資料的渲染。path路徑名稱就會自動對應到content資料夾中的md檔案名稱。\n ‘article’則是取得v-for陣列中的值時，可以自己取的代表該陣列的名稱，要注意的是，<code>v-for=”a in b”</code> ，a不能跟b叫相同的名字，通常的命名習慣都會是，後面是前面的複數型，例如：<code>v-for=”book in books”</code>。</p><p>而 <code>&lt;ContentList v-slot=”&#123; list &#125;”&gt;``&lt;/ContentList&gt;</code></p><p>代表這區域是要render content的範圍，如果不小心把要v-for 的陣列寫在<code>&lt;ContentList&gt;</code>的區域外面，就會噴錯，這很重要！</p><p>小補充： 身為初學者，我常常會不小心搞混在綁定值時，是<code>&#123;&#123; article.name &#125;&#125;</code> 還是是:article.img，甚麼時候是 、甚麼時候是v-bind；這邊提供一個記憶點~寫在&#39;內容&#39;時候(例如：h2的內容)是雙括號<code>&lt;h2&gt;&#123;&#123;  article.name  &#125;&#125;&lt;/h2&gt;</code>；綁在&#39;標籤裡面&#39;是用v-bind ，不用加雙括號，例如<code>&lt;img :src=&#39;article.img&#39;&gt;</code>，這樣以後就不會再寫錯啦。</p><p>在pages&#x2F;blog&#x2F;[slut].vue，也就是內頁的部分在<code>&lt;ContentList\&gt;</code>，<code>&lt;ContentDoc\&gt;</code>用法跟<code>&lt;ContentDoc\&gt;</code>差不多，只是多了個 <code>&lt;ContentRenderer *:value*=&#39;doc&#39;/&gt;</code>可以用，也就是render md檔中下面的內容欄位(記得在每個md檔案中，不能有一個檔案這裡是空的，不然會噴錯給你看)</p><h1 id="content-第三層資料"><a href="#content-第三層資料" class="headerlink" title="content 第三層資料"></a>content 第三層資料</h1><p>說第三層資料有點複雜，其實就是：「content資料夾裡面的md檔裡可不可以塞陣列資料？」答案是「可以！」</p><p>在上面的範例md檔中，都加進一筆陣列資料↓</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tags : [</span><br><span class="line">&#123; &#x27;id&#x27;:&#x27;1&#x27;, &#x27;name&#x27;:&#x27;Travel&#x27;&#125;,</span><br><span class="line">&#123; &#x27;id&#x27;:&#x27;2&#x27;, &#x27;name&#x27;:&#x27;England&#x27;&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><img src="https://nagiqq.github.io/2023/01/18/23011801/0104.jpg" alt="img"></p><p><code>tags: [&#123;….&#125;,]</code></p><p>然後在[slut].vue內頁地方加入一行<code>v-for=”tag in doc.tags”</code>陣列資料出來↓</p><p><img src="https://nagiqq.github.io/2023/01/18/23011801/0105.jpg" alt="img"><br>[slut].vue</p><p><img src="https://nagiqq.github.io/2023/01/18/23011801/0106.jpg" alt="img"><br>內頁呈現結果</p><br/><p>完整可參考我的github↓</p><p><a href="https://github.com/nagiqq/nuxt3_content">https://github.com/nagiqq/nuxt3_content</a></p><h1 id="References-參考資料"><a href="#References-參考資料" class="headerlink" title="References 參考資料"></a>References 參考資料</h1><ol><li>nuxt3 content</li></ol><ul><li><a href="https://v3.nuxtjs.org/guide/directory-structure/content#content-directory">v3.nuxtjs.org</a></li></ul><ol start="2"><li>content.org</li></ol><ul><li><a href="https://content.nuxtjs.org/get-started">Get StartedHow to start with Nuxt Content.nuxtjs.org</a></li></ul><ol start="3"><li>nuxt3-awesome-starter</li></ol><ul><li><a href="https://github.com/viandwi24/nuxt3-awesome-starter">GitHub - viandwi24&#x2F;nuxt3-awesome-starter.github.com</a></li></ul><ol start="4"><li>content v-for</li></ol><ul><li><a href="https://blog.openreplay.com/power-your-blog-with-nuxt-content">Power your blog with Nuxt Content (openreplay.com)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 程式語言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nuxt3 </tag>
            
            <tag> front-end </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/16/hello-world/"/>
      <url>/2023/01/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 文章分類 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> front-end </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
